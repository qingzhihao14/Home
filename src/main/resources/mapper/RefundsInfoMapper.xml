<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.friends.mapper.RefundsInfoMapper">
  <resultMap id="BaseResultMap" type="com.my.friends.dao.RefundsInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="refund_no" jdbcType="VARCHAR" property="refundNo" />
    <result column="refund_id" jdbcType="VARCHAR" property="refundId" />
    <result column="total_fee" jdbcType="INTEGER" property="totalFee" />
    <result column="refund" jdbcType="INTEGER" property="refund" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="refund_status" jdbcType="VARCHAR" property="refundStatus" />
    <result column="content_return" jdbcType="VARCHAR" property="contentReturn" />
    <result column="content_notify" jdbcType="VARCHAR" property="contentNotify" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_no, refund_no, refund_id, total_fee, refund, reason, refund_status, content_return, 
    content_notify, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.my.friends.dao.RefundsInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_refunds_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_refunds_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_refunds_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.my.friends.dao.RefundsInfoExample">
    delete from t_refunds_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.my.friends.dao.RefundsInfo" useGeneratedKeys="true">
    insert into t_refunds_info (order_no, refund_no, refund_id, 
      total_fee, refund, reason, 
      refund_status, content_return, content_notify, 
      create_time, update_time)
    values (#{orderNo,jdbcType=VARCHAR}, #{refundNo,jdbcType=VARCHAR}, #{refundId,jdbcType=VARCHAR}, 
      #{totalFee,jdbcType=INTEGER}, #{refund,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, 
      #{refundStatus,jdbcType=VARCHAR}, #{contentReturn,jdbcType=VARCHAR}, #{contentNotify,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.my.friends.dao.RefundsInfo" useGeneratedKeys="true">
    insert into t_refunds_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="refundNo != null">
        refund_no,
      </if>
      <if test="refundId != null">
        refund_id,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="refund != null">
        refund,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="contentReturn != null">
        content_return,
      </if>
      <if test="contentNotify != null">
        content_notify,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="refundNo != null">
        #{refundNo,jdbcType=VARCHAR},
      </if>
      <if test="refundId != null">
        #{refundId,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="refund != null">
        #{refund,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="contentReturn != null">
        #{contentReturn,jdbcType=VARCHAR},
      </if>
      <if test="contentNotify != null">
        #{contentNotify,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.my.friends.dao.RefundsInfoExample" resultType="java.lang.Long">
    select count(*) from t_refunds_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_refunds_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundNo != null">
        refund_no = #{record.refundNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundId != null">
        refund_id = #{record.refundId,jdbcType=VARCHAR},
      </if>
      <if test="record.totalFee != null">
        total_fee = #{record.totalFee,jdbcType=INTEGER},
      </if>
      <if test="record.refund != null">
        refund = #{record.refund,jdbcType=INTEGER},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.refundStatus != null">
        refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.contentReturn != null">
        content_return = #{record.contentReturn,jdbcType=VARCHAR},
      </if>
      <if test="record.contentNotify != null">
        content_notify = #{record.contentNotify,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_refunds_info
    set id = #{record.id,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      refund_no = #{record.refundNo,jdbcType=VARCHAR},
      refund_id = #{record.refundId,jdbcType=VARCHAR},
      total_fee = #{record.totalFee,jdbcType=INTEGER},
      refund = #{record.refund,jdbcType=INTEGER},
      reason = #{record.reason,jdbcType=VARCHAR},
      refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      content_return = #{record.contentReturn,jdbcType=VARCHAR},
      content_notify = #{record.contentNotify,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.my.friends.dao.RefundsInfo">
    update t_refunds_info
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="refundNo != null">
        refund_no = #{refundNo,jdbcType=VARCHAR},
      </if>
      <if test="refundId != null">
        refund_id = #{refundId,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        total_fee = #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="refund != null">
        refund = #{refund,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null">
        refund_status = #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="contentReturn != null">
        content_return = #{contentReturn,jdbcType=VARCHAR},
      </if>
      <if test="contentNotify != null">
        content_notify = #{contentNotify,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.my.friends.dao.RefundsInfo">
    update t_refunds_info
    set order_no = #{orderNo,jdbcType=VARCHAR},
      refund_no = #{refundNo,jdbcType=VARCHAR},
      refund_id = #{refundId,jdbcType=VARCHAR},
      total_fee = #{totalFee,jdbcType=INTEGER},
      refund = #{refund,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      refund_status = #{refundStatus,jdbcType=VARCHAR},
      content_return = #{contentReturn,jdbcType=VARCHAR},
      content_notify = #{contentNotify,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>